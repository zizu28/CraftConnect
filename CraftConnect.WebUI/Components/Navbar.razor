@using CraftConnect.WebUI.Services
@inject ThemeService ThemeService
@implements IDisposable

<header class="navbar-container">
    <div class="navbar-content">
        <a href="/" class="brand-logo">
            <img src="/images/craftconnect-logo.png" alt="CraftConnect Logo" />
            CraftConnect
        </a>

        @* Hamburger Button - visible only on mobile *@
        <button class="hamburger-btn" @onclick="ToggleMenu">
            <i class="bi bi-list"></i>
        </button>

        @* Navigation Links - hidden on mobile until toggled *@
        <nav class="nav-links @(isMenuOpen ? "open" : "")">
            <button class="btn theme-toggle-btn" @onclick="ThemeService.ToggleTheme" title="Toggle Theme">
                <i class="bi @(ThemeService.CurrentTheme == "light" ? "bi-moon" : "bi-sun")"></i>
            </button>
            <a href="/about">About</a>
            <a href="/services">Services</a>
            <a href="/contact">Contact</a>
            <button class="btn btn-secondary">Join Now</button>
            <button class="btn btn-primary">Find Services</button>
        </nav>
    </div>
</header>

@code {
    private bool isMenuOpen = false;

    private void ToggleMenu()
    {
        isMenuOpen = !isMenuOpen;
    }

    protected override void OnInitialized()
    {
        ThemeService.OnThemeChanged += OnThemeChangedHandler;
    }

    private void OnThemeChangedHandler()
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeService.OnThemeChanged -= OnThemeChangedHandler;
    }
}