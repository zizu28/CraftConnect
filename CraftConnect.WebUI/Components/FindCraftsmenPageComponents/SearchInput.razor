@using CraftConnect.WebUI.ViewModels

<div class="search-input-container">
    <input type="text"
           class="search-input"
           placeholder="Search for skills, location, or names..."
           @bind-value="SearchParameters.Query"
           @bind-value:event="oninput"
           @onkeyup="OnKeyUp" />
    <i class="bi bi-search search-icon"></i>
</div>

@code {
    [Parameter]
    public CraftsmanSearchParametersViewModel SearchParameters { get; set; } = new();

    [Parameter]
    public EventCallback<CraftsmanSearchParametersViewModel> SearchParametersChanged { get; set; }

    [Parameter]
    public EventCallback OnSearch { get; set; }

    private async Task OnKeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await OnSearch.InvokeAsync();
        }
    }

    // Notify parent of changes to allow two-way binding
    private async Task OnQueryChanged(string newQuery)
    {
        SearchParameters.Query = newQuery;
        await SearchParametersChanged.InvokeAsync(SearchParameters);
    }
}